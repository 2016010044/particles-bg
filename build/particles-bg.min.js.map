{"version":3,"file":"particles-bg.min.js","sources":["../src/utils/Rand.js","../src/particles/Canvas.jsx","../src/particles/Ball.jsx","../src/particles/Color.jsx","../src/particles/Lines.jsx","../src/particles/Thick.jsx","../src/particles/Square.jsx","../src/particles/Cobweb.jsx","../src/particles/Circle.jsx","../src/particles/Tadpole.jsx","../src/particles/Polygon.jsx","../src/particles/Fountain.jsx","../src/index.js"],"sourcesContent":["class Rand {\n\n  constructor() {\n      this.list = [];\n  }\n\n  set(probability, target) {\n      this.list.push({\n          probability,\n          target,\n          a: 0,\n          b: 1\n      });\n\n      this.calculation();\n  }\n\n  calculation() {\n      let total = 0;\n      for (let i = 0; i < this.list.length; i++) {\n          total += this.list[i].probability;\n      }\n\n      for (let i = 0; i < this.list.length; i++) {\n          const obj = this.list[i];\n          const val = obj.probability / total;\n\n          obj.a = i === 0 ? 0 : this.list[i - 1].b;\n          obj.b = obj.a + val;\n      }\n  }\n\n  getResult() {\n      const val = Math.random();\n      for (let i = 0; i < this.list.length; i++) {\n          const obj = this.list[i];\n\n          if (val <= obj.b && val > obj.a) {\n              return obj.target;\n          }\n      }\n\n      return this.list[0].target;\n  }\n};\n\nexport default Rand;\n","import React from \"react\";\nimport RAFManager from \"raf-manager\";\nimport { Waypoint } from \"react-waypoint\";\n\nexport default class Canvas extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.size = { width: 0, height: 0 };\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.initCanvas();\n      this.resize = this.resize.bind(this);\n      window.addEventListener(\"resize\", this.resize);\n    }, 100);\n\n    const canvas = this.canvasRef.current;\n    this.props.onCanvasDidMount && this.props.onCanvasDidMount(canvas);\n  }\n\n  initCanvas() {\n    const canvas = this.canvasRef.current;\n    if (this.props.globalCompositeOperation) {\n      const context = canvas.getContext(\"2d\");\n      context.globalCompositeOperation = this.props.globalCompositeOperation;\n    }\n\n    const { width, height } = this.setCanvasSize(canvas);\n    this.heartbeatDetectionCanvasSize(canvas);\n    this.props.onCanvasInited(canvas, width, height);\n  }\n\n  heartbeatDetectionCanvasSize(canvas) {\n    setInterval(() => {\n      const newHeight = this.canvasRef.current.clientHeight;\n      if (newHeight !== this.size.height) {\n        const { width, height } = this.setCanvasSize(canvas);\n        this.props.onResize && this.props.onResize(width, height);\n      }\n    }, 1000 / 10);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.resize);\n  }\n\n  resize() {\n    const canvas = this.canvasRef.current;\n    const { width, height } = this.setCanvasSize(canvas);\n    this.props.onResize && this.props.onResize(width, height);\n  }\n\n  setCanvasSize(canvas) {\n    const width = this.canvasRef.current.clientWidth;\n    const height = this.canvasRef.current.clientHeight;\n    this.size.width = width;\n    this.size.height = height;\n    canvas.width = width;\n    canvas.height = height;\n\n    return { width, height };\n  }\n\n  handleWaypointEnter() {\n    RAFManager.start();\n  }\n\n  handleWaypointLeave() {\n    RAFManager.stop();\n  }\n\n  render() {\n    return (\n      <Waypoint\n        onEnter={this.handleWaypointEnter}\n        onLeave={this.handleWaypointLeave}\n      >\n        <canvas ref={this.canvasRef} style={{ width: \"100%\", height: \"100%\" }} />\n      </Waypoint>\n    );\n  }\n}\n","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\n\nexport default class Ball extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  onCanvasInited(canvas, width, height) {\n    this.createProton(canvas, width, height);\n    this.createMiniEmitter(canvas);\n    RAFManager.add(this.renderProton);\n  }\n\n  componentWillUnmount() {\n    try {\n      RAFManager.remove(this.renderProton);\n      this.proton.destroy();\n    } catch (e) {}\n  }\n\n  onResize() {}\n\n  createProton(canvas, width, height) {\n    const context = canvas.getContext(\"2d\");\n    this.proton = new Proton();\n\n    const emitter = new Proton.Emitter();\n    emitter.rate = new Proton.Rate(\n      this.props.num ? new Proton.Span(this.props.num) : new Proton.Span(4, 9),\n      new Proton.Span(0.8, 1.3)\n    );\n\n    emitter.addInitialize(new Proton.Mass(1));\n    emitter.addInitialize(new Proton.Radius(1, 50));\n    emitter.addInitialize(new Proton.Life(5, 6));\n    emitter.addInitialize(\n      new Proton.Velocity(\n        new Proton.Span(5, 8),\n        new Proton.Span(30, 70),\n        \"polar\"\n      )\n    );\n\n    emitter.addBehaviour(new Proton.Alpha(1, 0));\n    emitter.addBehaviour(\n      new Proton.Color([\"#36aaf3\", \"#fd769c\", \"#94ff22\", \"#ffa545\", \"#ffffff\"])\n    );\n    emitter.addBehaviour(new Proton.Scale(0.7, 1));\n    emitter.addBehaviour(new Proton.Gravity(3));\n    emitter.addBehaviour(new Proton.Collision(emitter));\n    emitter.addBehaviour(this.customDeadBehaviour(canvas));\n    emitter.addBehaviour(\n      new Proton.CrossZone(\n        new Proton.RectZone(0, 0, canvas.width, canvas.height),\n        \"bound\"\n      )\n    );\n\n    emitter.p.x = Math.min(500, Math.max(canvas.width / 2 - 400, 50));\n    emitter.p.y = canvas.height / 2 + 50;\n    emitter.emit();\n    this.proton.addEmitter(emitter);\n\n    const renderer = new Proton.CanvasRenderer(canvas);\n    renderer.onProtonUpdate = function() {\n      context.fillStyle = \"rgba(0, 122, 197, 0.2)\";\n      context.fillRect(0, 0, canvas.width, canvas.height);\n    };\n    this.proton.addRenderer(renderer);\n  }\n\n  customDeadBehaviour(canvas) {\n    return {\n      initialize: function(particle) {},\n      applyBehaviour: particle => {\n        if (particle.p.y + particle.radius >= canvas.height) {\n          if (particle.radius > 9) {\n            this.miniEmitteing(particle);\n            particle.dead = true;\n          }\n        }\n      }\n    };\n  }\n\n  createMiniEmitter(canvas) {\n    const miniEmitter = new Proton.Emitter();\n    miniEmitter.rate = new Proton.Rate(\n      new Proton.Span(3, 6),\n      new Proton.Span(1, 2)\n    );\n\n    miniEmitter.addInitialize(new Proton.Mass(1));\n    miniEmitter.radiusInitialize = new Proton.Radius();\n    miniEmitter.addInitialize(miniEmitter.radiusInitialize);\n    miniEmitter.addInitialize(new Proton.Life(0.5, 1));\n    miniEmitter.addInitialize(\n      new Proton.V(\n        new Proton.Span(1.5, 3),\n        new Proton.Span(0, 70, true),\n        \"polar\"\n      )\n    );\n\n    miniEmitter.colorBehaviour = new Proton.Color(\"#ffffff\");\n    miniEmitter.addBehaviour(new Proton.Alpha(1, 0));\n    miniEmitter.addBehaviour(miniEmitter.colorBehaviour);\n    miniEmitter.addBehaviour(new Proton.Gravity(4));\n    miniEmitter.addBehaviour(new Proton.Collision(miniEmitter));\n    miniEmitter.addBehaviour(\n      new Proton.CrossZone(\n        new Proton.RectZone(0, 0, canvas.width, canvas.height),\n        \"bound\"\n      )\n    );\n    this.proton.addEmitter(miniEmitter);\n\n    this.miniEmitter = miniEmitter;\n  }\n\n  miniEmitteing(particle) {\n    const miniEmitter = this.miniEmitter;\n    miniEmitter.radiusInitialize.reset(\n      particle.radius * 0.05,\n      particle.radius * 0.2\n    );\n    miniEmitter.colorBehaviour.reset(particle.color);\n    miniEmitter.p.x = particle.p.x;\n    miniEmitter.p.y = particle.p.y;\n    miniEmitter.emit(\"once\");\n  }\n\n  renderProton() {\n    this.proton && this.proton.update();\n  }\n\n  render() {\n    return (\n      <Canvas\n        globalCompositeOperation=\"darker\"\n        onCanvasInited={this.onCanvasInited.bind(this)}\n        onResize={this.onResize.bind(this)}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\n\nexport default class Color extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.colors = [\n      \"#529B88\",\n      \"#CDD180\",\n      \"#FFFA32\",\n      \"#FB6255\",\n      \"#FB4A53\",\n      \"#FF4E50\",\n      \"#F9D423\"\n    ];\n  }\n\n  componentWillUnmount() {\n    try {\n      RAFManager.remove(this.renderProton);\n      this.proton.destroy();\n    } catch (e) {}\n  }\n\n  onCanvasInited(canvas, width, height) {\n    this.createProton(canvas, width, height);\n    RAFManager.add(this.renderProton);\n  }\n\n  onResize() {}\n\n  createProton(canvas, width, height) {\n    this.proton = new Proton();\n    const emitter = new Proton.Emitter();\n    emitter.rate = new Proton.Rate(\n      this.props.num ? new Proton.Span(this.props.num) : new Proton.Span(5, 8),\n      new Proton.Span(0.1, 0.25)\n    );\n\n    emitter.addInitialize(new Proton.Mass(1));\n    emitter.addInitialize(new Proton.Radius(20, 200));\n    emitter.addInitialize(new Proton.Life(2, 4));\n    emitter.addInitialize(\n      new Proton.Position(new Proton.RectZone(0, 0, width, height))\n    );\n\n    emitter.addBehaviour(new Proton.Alpha(0, 1, Infinity, Proton.easeOutCubic));\n    emitter.addBehaviour(new Proton.Scale(1, 0, Infinity, Proton.easeOutCubic));\n    emitter.addBehaviour(new Proton.Color(this.colors, \"random\"));\n\n    emitter.emit();\n    this.proton.addEmitter(emitter);\n\n    const renderer = new Proton.CanvasRenderer(canvas);\n    this.proton.addRenderer(renderer);\n  }\n\n  renderProton() {\n    this.proton && this.proton.update();\n  }\n\n  render() {\n    return (\n      <Canvas\n        globalCompositeOperation=\"darker\"\n        onCanvasInited={this.onCanvasInited.bind(this)}\n        onResize={this.onResize.bind(this)}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\n\nexport default class Lines extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentWillUnmount() {\n    try {\n      RAFManager.remove(this.renderProton);\n      this.proton.destroy();\n    } catch (e) {}\n  }\n\n  onCanvasInited(canvas, width, height) {\n    this.createProton(canvas, width, height);\n    RAFManager.add(this.renderProton);\n  }\n\n  onResize(width, height) {\n    this.crossZoneBehaviour.zone.width = width;\n    this.crossZoneBehaviour.zone.height = height;\n    this.proton.renderers[0].resize(width, height);\n  }\n\n  createProton(canvas, width, height) {\n    this.proton = new Proton();\n\n    const emitter = new Proton.Emitter();\n    emitter.damping = 0.008;\n    emitter.rate = new Proton.Rate(this.props.num ? this.props.num : 250);\n    emitter.addInitialize(new Proton.Mass(1));\n    emitter.addInitialize(new Proton.Radius(4));\n    emitter.addInitialize(\n      new Proton.Velocity(\n        new Proton.Span(1.5),\n        new Proton.Span(0, 360),\n        \"polar\"\n      )\n    );\n    const mouseObj = {\n      x: width / 2,\n      y: height / 2\n    };\n\n    const attractionBehaviour = new Proton.Attraction(mouseObj, 0, 0);\n    const crossZoneBehaviour = new Proton.CrossZone(\n      new Proton.RectZone(0, 0, canvas.width, canvas.height),\n      \"cross\"\n    );\n    emitter.addBehaviour(new Proton.Color(\"random\"));\n    emitter.addBehaviour(attractionBehaviour, crossZoneBehaviour);\n    emitter.addBehaviour(new Proton.RandomDrift(10, 10, 0.05));\n    emitter.p.x = canvas.width / 2;\n    emitter.p.y = canvas.height / 2;\n    emitter.emit(\"once\");\n\n    this.proton.addEmitter(emitter);\n    this.proton.addRenderer(this.createRenderer(canvas));\n    this.crossZoneBehaviour = crossZoneBehaviour;\n  }\n\n  createRenderer(canvas) {\n    const context = canvas.getContext(\"2d\");\n    const renderer = new Proton.CanvasRenderer(canvas);\n    renderer.onProtonUpdate = function() {\n      context.fillStyle = \"rgba(0, 0, 0, 0.02)\";\n      context.fillRect(0, 0, canvas.width, canvas.height);\n    };\n\n    renderer.onParticleUpdate = function(particle) {\n      context.beginPath();\n      context.strokeStyle = particle.color;\n      context.lineWidth = 1;\n      context.moveTo(particle.old.p.x, particle.old.p.y);\n      context.lineTo(particle.p.x, particle.p.y);\n      context.closePath();\n      context.stroke();\n    };\n\n    return renderer;\n  }\n\n  renderProton() {\n    this.proton && this.proton.update();\n  }\n\n  render() {\n    return (\n      <Canvas\n        globalCompositeOperation=\"darker\"\n        onCanvasInited={this.onCanvasInited.bind(this)}\n        onResize={this.onResize.bind(this)}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\n\nexport default class Thick extends React.Component {\n  constructor(props) {\n    super(props);\n    this.hue = 0;\n    this.index = 0;\n    this.colorTemplate = `hsla(hue,80%,50%, 0.75)`;\n  }\n\n  onCanvasInited(canvas, width, height) {\n    this.createProton(canvas, width, height);\n    RAFManager.add(this.renderProton);\n  }\n\n  onResize(width, height) {\n    this.crossZoneBehaviour.zone.width = width;\n    this.crossZoneBehaviour.zone.height = height;\n    this.proton.renderers[0].resize(width, height);\n  }\n\n  createProton(canvas, width, height) {\n    this.proton = new Proton();\n\n    const emitter = new Proton.Emitter();\n    emitter.damping = 0.008;\n    emitter.rate = new Proton.Rate(this.props.num ? this.props.num : 150);\n\n    // Initialize\n    emitter.addInitialize(new Proton.Mass(1));\n    emitter.addInitialize(new Proton.Radius(8));\n    emitter.addInitialize(\n      new Proton.V(new Proton.Span(0.1, 0.5), new Proton.Span(0, 360), \"polar\")\n    );\n    emitter.addInitialize(\n      new Proton.Position(\n        new Proton.CircleZone(canvas.width / 2, canvas.height / 2, 100)\n      )\n    );\n\n    // Behaviour\n    const crossZoneBehaviour = new Proton.CrossZone(\n      new Proton.RectZone(0, 0, canvas.width, canvas.height),\n      \"cross\"\n    );\n    emitter.addBehaviour(crossZoneBehaviour);\n    this.repulsion = new Proton.Repulsion(\n      {\n        x: canvas.width / 2,\n        y: canvas.height / 2 - 100\n      },\n      3,\n      300\n    );\n\n    this.attraction = new Proton.Attraction(\n      {\n        x: canvas.width / 2,\n        y: canvas.height / 2\n      },\n      3,\n      200\n    );\n    emitter.addBehaviour(this.attraction, this.repulsion);\n    emitter.addBehaviour(new Proton.Color(\"random\"));\n    emitter.addBehaviour(new Proton.RandomDrift(20, 15, 0.15));\n\n    emitter.emit(\"once\");\n    this.proton.addEmitter(emitter);\n    this.proton.addRenderer(this.createRenderer(canvas));\n    this.crossZoneBehaviour = crossZoneBehaviour;\n  }\n\n  createRenderer(canvas) {\n    const context = canvas.getContext(\"2d\");\n    const renderer = new Proton.CanvasRenderer(canvas);\n\n    renderer.onProtonUpdate = () => {\n      this.hue += 1;\n      context.fillStyle = \"rgba(0, 0, 0, 0.02)\";\n      context.fillRect(0, 0, canvas.width, canvas.height);\n    };\n\n    renderer.onParticleCreated = particle => {\n      particle.data.begin = Proton.MathUtil.randomAToB(1, 120);\n      particle.data.tha = Proton.MathUtil.randomAToB(0, Math.PI * 2);\n    };\n\n    renderer.onParticleUpdate = particle => {\n      const hue = particle.data.begin + this.hue;\n      particle.color = this.colorTemplate.replace(\"hue\", hue % 360);\n\n      const ratio = 3 / 4;\n      const radius =\n        particle.radius * (1 - ratio) * Math.cos((particle.data.tha += 0.01)) +\n        particle.radius * ratio;\n\n      context.beginPath();\n      context.fillStyle = particle.color;\n      context.arc(particle.p.x, particle.p.y, radius, 0, Math.PI * 2, true);\n      context.closePath();\n      context.fill();\n    };\n\n    return renderer;\n  }\n\n  componentWillUnmount() {\n    try {\n      RAFManager.remove(this.renderProton);\n      this.proton.destroy();\n    } catch (e) {}\n  }\n\n  renderProton(canvas) {\n    this.proton.update();\n    if (this.index % 200 === 0) {\n      this.attraction.targetPosition.x = Math.random() * canvas.width;\n      this.attraction.targetPosition.y = Math.random() * canvas.height;\n\n      this.repulsion.targetPosition.x = Math.random() * canvas.width;\n      this.repulsion.targetPosition.y = Math.random() * canvas.height;\n    }\n\n    this.index++;\n  }\n\n  render() {\n    return (\n      <Canvas\n        onCanvasInited={this.onCanvasInited.bind(this)}\n        onResize={this.onResize.bind(this)}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\n\nexport default class Square extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.colors = [\n      \"#fad390\",\n      \"#81ecec\",\n      \"#ffffff\",\n      \"#badc58\",\n      \"#f9ca24\",\n      \"#FEA47F\"\n    ];\n  }\n\n  componentWillUnmount() {\n    try {\n      RAFManager.remove(this.renderProton);\n      this.proton.destroy();\n    } catch (e) {}\n  }\n\n  onCanvasDidMount(canvas) {\n    canvas.style.backgroundColor = \"#2C3A47\";\n  }\n\n  onCanvasInited(canvas, width, height) {\n    this.createProton(canvas, width, height);\n    RAFManager.add(this.renderProton);\n  }\n\n  onResize(width, height) {\n    const dis = 150;\n    this.crossZoneBehaviour.zone.width = width + 2 * dis;\n    this.crossZoneBehaviour.zone.height = height + 2 * dis;\n    this.proton.renderers[0].resize(width, height);\n  }\n\n  createProton(canvas, width, height) {\n    this.proton = new Proton();\n    const emitter = new Proton.Emitter();\n    emitter.rate = new Proton.Rate(this.props.num ? this.props.num : 50);\n    emitter.damping = 0;\n\n    emitter.addInitialize(new Proton.Mass(1));\n    emitter.addInitialize(new Proton.Radius(4, 70));\n    emitter.addInitialize(\n      new Proton.Velocity(new Proton.Span(2, 10), new Proton.Span(0), \"polar\")\n    );\n    emitter.addInitialize(\n      new Proton.Position(\n        new Proton.LineZone(0, canvas.height, canvas.width, canvas.height)\n      )\n    );\n\n    const dis = 150;\n    const crossZoneBehaviour = new Proton.CrossZone(\n      new Proton.RectZone(\n        0 - dis,\n        0 - dis,\n        canvas.width + 2 * dis,\n        canvas.height + 2 * dis\n      ),\n      \"cross\"\n    );\n    emitter.addBehaviour(crossZoneBehaviour);\n    emitter.addBehaviour(new Proton.Alpha(Proton.getSpan(0.1, 0.55)));\n    emitter.addBehaviour(new Proton.Color(this.colors));\n\n    emitter.emit(\"once\");\n    this.proton.addEmitter(emitter);\n    const renderer = this.createRenderer(canvas);\n    this.proton.addRenderer(renderer);\n\n    this.crossZoneBehaviour = crossZoneBehaviour;\n    emitter.preEmit(2);\n  }\n\n  createRenderer(canvas) {\n    const context = canvas.getContext(\"2d\");\n    const renderer = new Proton.CustomRenderer();\n\n    renderer.onProtonUpdate = () => {\n      context.clearRect(0, 0, canvas.width, canvas.height);\n    };\n\n    renderer.onParticleCreated = particle => {\n      const w = particle.radius || 60;\n      const h = Proton.MathUtil.randomAToB(100, 200, \"int\");\n      particle.data.w = w;\n      particle.data.h = h;\n    };\n\n    renderer.onParticleUpdate = particle => {\n      const w = particle.data.w;\n      const h = particle.data.h;\n      context.save();\n      context.globalAlpha = particle.alpha;\n      context.fillStyle = particle.color;\n\n      context.translate(particle.p.x, particle.p.y);\n      context.rotate(Proton.MathUtil.degreeTransform(particle.rotation));\n      context.translate(-particle.p.x, -particle.p.y);\n\n      context.beginPath();\n      context.rect(particle.p.x - w / 2, particle.p.y - h / 2, w, h);\n\n      context.closePath();\n      context.fill();\n      context.globalAlpha = 1;\n      context.restore();\n    };\n\n    return renderer;\n  }\n\n  renderProton() {\n    this.proton && this.proton.update();\n  }\n\n  render() {\n    return (\n      <Canvas\n        globalCompositeOperation=\"lighter\"\n        onCanvasDidMount={this.onCanvasDidMount.bind(this)}\n        onCanvasInited={this.onCanvasInited.bind(this)}\n        onResize={this.onResize.bind(this)}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\n\nexport default class Cobweb extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  onCanvasInited(canvas, width, height) {\n    this.createProton(canvas, width, height);\n    RAFManager.add(this.renderProton);\n  }\n\n  componentWillUnmount() {\n    try {\n      RAFManager.remove(this.renderProton);\n      this.proton.destroy();\n    } catch (e) {}\n  }\n\n  onResize(width, height) {\n    this.crossZoneBehaviour.zone.width = width;\n    this.crossZoneBehaviour.zone.height = height;\n    this.proton.renderers[0].resize(width, height);\n  }\n\n  createProton(canvas, width, height) {\n    this.proton = new Proton();\n\n    const emitter = new Proton.Emitter();\n    emitter.rate = new Proton.Rate(\n      this.props.num ? new Proton.Span(this.props.num) : new Proton.Span(100),\n      new Proton.Span(0.05, 0.2)\n    );\n\n    emitter.addInitialize(new Proton.Mass(1));\n    emitter.addInitialize(new Proton.Radius(1, 4));\n    emitter.addInitialize(new Proton.Life(Infinity));\n\n    const pointZone = new Proton.Position(\n      new Proton.RectZone(0, 0, width, height)\n    );\n    emitter.addInitialize(pointZone);\n    emitter.addInitialize(\n      new Proton.Velocity(\n        new Proton.Span(0.3, 0.6),\n        new Proton.Span(0, 360),\n        \"polar\"\n      )\n    );\n\n    emitter.addBehaviour(new Proton.Alpha(Proton.getSpan(0.2, 0.9)));\n    emitter.addBehaviour(new Proton.Color(\"#ffffff\"));\n    this.crossZoneBehaviour = new Proton.CrossZone(\n      new Proton.RectZone(0, 0, width, height),\n      \"cross\"\n    );\n    emitter.addBehaviour(this.crossZoneBehaviour);\n\n    emitter.emit(\"once\");\n    emitter.damping = 0;\n    this.proton.addEmitter(emitter);\n    this.proton.addRenderer(this.createRenderer(canvas, emitter));\n  }\n\n  createRenderer(canvas, emitter) {\n    const context = canvas.getContext(\"2d\");\n    const renderer = new Proton.CanvasRenderer(canvas);\n    const R = 140;\n\n    renderer.onProtonUpdateAfter = function() {\n      let particles = emitter.particles;\n\n      for (let i = 0; i < particles.length; i++) {\n        for (let j = i + 1; j < particles.length; j++) {\n          let pA = particles[i];\n          let pB = particles[j];\n          let dis = pA.p.distanceTo(pB.p);\n\n          if (dis < R) {\n            let alpha = (1 - dis / R) * 0.5;\n            context.strokeStyle = \"rgba(255,255,255,\" + alpha + \")\";\n            context.beginPath();\n            context.moveTo(pA.p.x, pA.p.y);\n            context.lineTo(pB.p.x, pB.p.y);\n            context.closePath();\n            context.stroke();\n          }\n        }\n      }\n    };\n\n    return renderer;\n  }\n\n  renderProton() {\n    this.proton && this.proton.update();\n  }\n\n  render() {\n    return (\n      <Canvas\n        globalCompositeOperation=\"darker\"\n        onCanvasInited={this.onCanvasInited.bind(this)}\n        onResize={this.onResize.bind(this)}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\n\nexport default class Circle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.colors = [\n      \"#74b9ff\",\n      \"#e84393\",\n      \"#6c5ce7\",\n      \"#00b894\",\n      \"#fdcb6e\",\n      \"#006266\",\n      \"#1B1464\"\n    ];\n  }\n\n  componentWillUnmount() {\n    try {\n      RAFManager.remove(this.renderProton);\n      this.proton.destroy();\n    } catch (e) {}\n  }\n\n  onCanvasInited(canvas, width, height) {\n    this.createProton(canvas, width, height);\n    RAFManager.add(this.renderProton);\n  }\n\n  onResize(width, height) {\n    this.crossZoneBehaviour.zone.width = width;\n    this.crossZoneBehaviour.zone.height = height;\n    this.proton.renderers[0].resize(width, height);\n  }\n\n  createProton(canvas, width, height) {\n    this.proton = new Proton();\n\n    const emitter = new Proton.Emitter();\n    emitter.rate = new Proton.Rate(this.props.num || 20);\n    emitter.damping = 0.008;\n\n    emitter.addInitialize(new Proton.Mass(1));\n    emitter.addInitialize(new Proton.Radius(30, 600));\n    emitter.addInitialize(\n      new Proton.Velocity(\n        new Proton.Span(0.5),\n        new Proton.Span(0, 360),\n        \"polar\"\n      )\n    );\n    emitter.addInitialize(\n      new Proton.Position(\n        new Proton.RectZone(0, 0, canvas.width, canvas.height)\n      )\n    );\n\n    const crossZoneBehaviour = new Proton.CrossZone(\n      new Proton.RectZone(0, 0, canvas.width, canvas.height),\n      \"cross\"\n    );\n    emitter.addBehaviour(crossZoneBehaviour);\n    emitter.addBehaviour(new Proton.Alpha(Proton.getSpan(0.35, 0.55)));\n    emitter.addBehaviour(new Proton.Color(this.colors, \"random\"));\n    emitter.addBehaviour(new Proton.RandomDrift(50, 50, 0.5));\n\n    emitter.emit(\"once\");\n    this.proton.addEmitter(emitter);\n\n    const renderer = new Proton.CanvasRenderer(canvas);\n    this.proton.addRenderer(renderer);\n\n    this.crossZoneBehaviour = crossZoneBehaviour;\n  }\n\n  renderProton() {\n    this.proton && this.proton.update();\n  }\n\n  render() {\n    return (\n      <Canvas\n        globalCompositeOperation=\"darken\"\n        onCanvasInited={this.onCanvasInited.bind(this)}\n        onResize={this.onResize.bind(this)}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\n\nexport default class Tadpole extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  onCanvasDidMount(canvas) {\n    canvas.style.backgroundColor = \"#192a56\";\n  }\n\n  onCanvasInited(canvas, width, height) {\n    this.createProton(canvas, width, height);\n    this.renderProton();\n  }\n\n  onResize(width, height) {\n    this.crossZoneBehaviour.zone.width = width;\n    this.crossZoneBehaviour.zone.height = height;\n    this.proton.renderers[0].resize(width, height);\n  }\n\n  createProton(canvas, width, height) {\n    this.proton = new Proton();\n\n    const emitter = new Proton.Emitter();\n    emitter.damping = 0.008;\n    emitter.rate = new Proton.Rate(this.props.num ? this.props.num : 50);\n    emitter.addInitialize(new Proton.Mass(1));\n    emitter.addInitialize(new Proton.Radius(5, 9));\n    emitter.addInitialize(\n      new Proton.Velocity(\n        new Proton.Span(1.5),\n        new Proton.Span(0, 360),\n        \"polar\"\n      )\n    );\n    emitter.addInitialize(\n      new Proton.Position(new Proton.RectZone(0, 0, width, height))\n    );\n\n    const mouseInfo = {\n      x: width / 2,\n      y: height / 2\n    };\n\n    const attractionBehaviour = new Proton.Attraction(mouseInfo, 0, 0);\n    const crossZoneBehaviour = new Proton.CrossZone(\n      new Proton.RectZone(0, 0, canvas.width, canvas.height),\n      \"bound\"\n    );\n    emitter.addBehaviour(new Proton.Color(\"#bbb\"));\n    //emitter.addBehaviour(new Proton.Alpha(new Proton.Span(0.5, 1)));\n    emitter.addBehaviour(attractionBehaviour, crossZoneBehaviour);\n    emitter.addBehaviour(new Proton.RandomDrift(15, 15, 0.05));\n    emitter.emit(\"once\");\n\n    this.proton.addEmitter(emitter);\n    this.proton.addRenderer(this.createRenderer(canvas));\n    this.crossZoneBehaviour = crossZoneBehaviour;\n  }\n\n  createRenderer(canvas) {\n    const jointCount = 10;\n    const delayTime = 8;\n    const context = canvas.getContext(\"2d\");\n    const renderer = new Proton.CanvasRenderer(canvas);\n\n    renderer.onProtonUpdate = function() {\n      context.clearRect(0, 0, canvas.width, canvas.height);\n    };\n\n    renderer.onParticleCreated = particle => {\n      particle.data.points = [];\n      particle.data.index = 0;\n    };\n\n    renderer.onParticleUpdate = function(particle) {\n      drawTadpoleTail(particle);\n      if (particle.data.index % delayTime === 0) fillPointsData(particle);\n      drawTadpoleHead(particle);\n      particle.data.index++;\n    };\n\n    const fillPointsData = particle => {\n      particle.data.points.unshift(particle.p.y);\n      particle.data.points.unshift(particle.p.x);\n\n      if (particle.data.points.length > jointCount) {\n        particle.data.points.pop();\n        particle.data.points.pop();\n      }\n    };\n\n    const drawTadpoleHead = particle => {\n      context.fillStyle = particle.color;\n      context.beginPath();\n      context.arc(\n        particle.p.x,\n        particle.p.y,\n        particle.radius,\n        0,\n        Math.PI * 2,\n        true\n      );\n      context.closePath();\n      context.fill();\n    };\n\n    const drawTadpoleTail = particle => {\n      context.beginPath();\n      context.strokeStyle = particle.color;\n\n      context.moveTo(particle.p.x, particle.p.y);\n\n      const l = particle.data.points.length;\n      for (let i = 0; i < l; i += 2) {\n        const x = particle.data.points[i];\n        const y = particle.data.points[i + 1];\n\n        context.lineWidth = linearEvaluation(i, l);\n        context.lineTo(x, y);\n        context.stroke();\n      }\n    };\n\n    const linearEvaluation = (i, l) => {\n      if (l <= 2) return 1;\n\n      const max = 6;\n      const A = (max - 1) / (2 / l - 1);\n      const B = 1 - A;\n      const X = (i + 2) / l;\n      let val = A * X + B;\n      val = val >> 0;\n\n      return val;\n    };\n\n    return renderer;\n  }\n\n  renderProton() {\n    RAFManager.add(() => {\n      this.proton.update();\n      //this.proton.stats.update();\n    });\n  }\n\n  render() {\n    return (\n      <Canvas\n        globalCompositeOperation=\"darker\"\n        onCanvasDidMount={this.onCanvasDidMount.bind(this)}\n        onCanvasInited={this.onCanvasInited.bind(this)}\n        onResize={this.onResize.bind(this)}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\n\nconst COLOR = [\n  \"#f6b93b\",\n  \"#18dcff\",\n  \"#cd84f1\",\n  \"#ED4C67\",\n  \"#ffffff\",\n  \"#b71540\",\n  \"#32ff7e\",\n  \"#ff3838\"\n];\n\nexport default class Flower extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  onCanvasInited(canvas, width, height) {\n    this.createProton(canvas);\n    this.createEmitter({\n      canvas,\n      x: width / 2,\n      y: height / 2,\n      mainEmitter: true,\n      zone: \"bound\"\n    });\n\n    RAFManager.add(this.renderProton);\n  }\n\n  componentWillUnmount() {\n    try {\n      RAFManager.remove(this.renderProton);\n      this.proton.destroy();\n    } catch (e) {}\n  }\n\n  onResize() {}\n\n  createProton(canvas) {\n    this.proton = new Proton();\n    const renderer = this.createRenderer(canvas);\n    this.proton.addRenderer(renderer);\n  }\n\n  createRenderer(canvas) {\n    const context = canvas.getContext(\"2d\");\n    const renderer = new Proton.CustomRenderer();\n\n    renderer.onProtonUpdate = () => {\n      context.clearRect(0, 0, canvas.width, canvas.height);\n    };\n\n    renderer.onParticleCreated = particle => {\n      particle.data.count = Proton.MathUtil.randomAToB(3, 10, true);\n    };\n\n    renderer.onParticleUpdate = particle => {\n      context.save();\n      context.globalAlpha = particle.alpha;\n      context.fillStyle = particle.color;\n\n      context.translate(particle.p.x, particle.p.y);\n      context.rotate(Proton.MathUtil.degreeTransform(particle.rotation));\n      context.translate(-particle.p.x, -particle.p.y);\n\n      context.beginPath();\n      drawPolygon(particle, particle.data.count);\n\n      context.closePath();\n      context.fill();\n      context.globalAlpha = 1;\n      context.restore();\n    };\n\n    renderer.onParticleDead = particle => {};\n\n    const drawPolygon = (particle, count) => {\n      if (count >= 7) {\n        context.arc(\n          particle.p.x,\n          particle.p.y,\n          particle.radius,\n          0,\n          Math.PI * 2,\n          true\n        );\n      } else {\n        const radius = particle.radius;\n\n        for (let i = 0; i <= count; i++) {\n          let x =\n            particle.p.x +\n            radius * Math.cos((((Math.PI / 180) * 360) / count) * i);\n          let y =\n            particle.p.y +\n            radius * Math.sin((((Math.PI / 180) * 360) / count) * i);\n\n          if (i === 0) context.moveTo(x, y);\n          else context.lineTo(x, y);\n        }\n      }\n    };\n\n    return renderer;\n  }\n\n  createEmitter({\n    mainEmitter,\n    canvas,\n    x,\n    y,\n    radius,\n    color = COLOR,\n    zone = \"dead\",\n    once = \"all\",\n    alpha = 0.85,\n    gravity = 3.5\n  }) {\n    const emitter = this.proton.pool.get(Proton.Emitter);\n\n    if (!emitter.completed) {\n      emitter.rate = new Proton.Rate(\n        this.props.num ? new Proton.Span(this.props.num) : new Proton.Span(4, 9),\n        new Proton.Span(1.6, 2.2)\n      );\n\n      const radiusInit = mainEmitter\n        ? new Proton.Radius(10, 110)\n        : new Proton.Radius(3, radius);\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(radiusInit);\n      emitter.addInitialize(new Proton.Life(3, 6));\n      emitter.addInitialize(\n        new Proton.Velocity(\n          new Proton.Span(4, 6),\n          new Proton.Span(-90, 90),\n          \"polar\"\n        )\n      );\n\n      emitter.addBehaviour(new Proton.Alpha(alpha, 0.2));\n      emitter.addBehaviour(new Proton.Color(color));\n      emitter.addBehaviour(new Proton.Scale(1, 0.3));\n      emitter.addBehaviour(new Proton.Rotate());\n      emitter.addBehaviour(new Proton.Gravity(gravity));\n\n      emitter.addBehaviour(this.customDeadBehaviour(canvas));\n      emitter.addBehaviour(\n        new Proton.CrossZone(\n          new Proton.RectZone(0, 0, canvas.width, canvas.height),\n          zone\n        )\n      );\n    }\n\n    emitter.p.x = x;\n    emitter.p.y = y;\n    if (once === \"once\") emitter.emit(\"once\");\n    else emitter.emit();\n\n    this.proton.addEmitter(emitter);\n    //this.expireEmitter(emitter);\n  }\n\n  expireEmitter(emitter) {\n    setTimeout(() => {\n      emitter.completed = true;\n      this.proton.pool.expire(emitter);\n      this.proton.removeEmitter(emitter);\n    }, 500);\n  }\n\n  customDeadBehaviour(canvas) {\n    return {\n      initialize: particle => {\n        particle.data = particle.data || {};\n        particle.data.oldRadius = particle.radius;\n        particle.data.emitterCount = 0;\n      },\n      applyBehaviour: particle => {\n        if (particle.radius < 5) return;\n        if (particle.data.emitterCount >= 2) return;\n\n        if (particle.radius <= (1 / 3) * particle.data.oldRadius) {\n          particle.data.emitterCount++;\n          this.createEmitter({\n            canvas,\n            x: particle.p.x,\n            y: particle.p.y,\n            radius: particle.radius * (1 / 2),\n            alpha: 0.5,\n            gravity: 5,\n            color: particle.color,\n            once: \"once\"\n          });\n        }\n      }\n    };\n  }\n\n  renderProton() {\n    this.proton && this.proton.update();\n  }\n\n  render() {\n    return (\n      <Canvas\n        globalCompositeOperation=\"darker\"\n        onCanvasInited={this.onCanvasInited.bind(this)}\n        onResize={this.onResize.bind(this)}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\n\nexport default class Fountain extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.colors = [\n      \"#529B88\",\n      \"#CDD180\",\n      \"#FFFA32\",\n      \"#FB6255\",\n      \"#FB4A53\",\n      \"#FF4E50\",\n      \"#F9D423\"\n    ];\n  }\n\n  componentWillUnmount() {\n    try {\n      RAFManager.remove(this.renderProton);\n      this.proton.destroy();\n    } catch (e) {}\n  }\n\n  onCanvasInited(canvas, width, height) {\n    this.createProton(canvas, width, height);\n    RAFManager.add(this.renderProton);\n  }\n\n  onResize() {}\n\n  createProton(canvas, width, height) {\n    this.proton = new Proton();\n    const emitter = new Proton.Emitter();\n    emitter.rate = new Proton.Rate(\n      this.props.num ? new Proton.Span(this.props.num) : new Proton.Span(4, 8),\n      new Proton.Span(0.1, 0.25)\n    );\n\n    emitter.addInitialize(new Proton.Mass(1));\n    emitter.addInitialize(new Proton.Radius(20, 200));\n    emitter.addInitialize(new Proton.Life(2, 4));\n    emitter.addInitialize(\n      new Proton.Velocity(\n        new Proton.Span(4, 7),\n        new Proton.Span(0, 360),\n        \"polar\"\n      )\n    );\n    emitter.addInitialize(\n      new Proton.Position(new Proton.CircleZone(width / 2, height / 2, 100))\n    );\n\n    emitter.addBehaviour(new Proton.Alpha(1, 0));\n    emitter.addBehaviour(new Proton.Scale(0.2, 1));\n    emitter.addBehaviour(this.createCustomBehaviour());\n    emitter.addBehaviour(new Proton.Color(this.colors, \"random\"));\n    emitter.emit();\n    this.proton.addEmitter(emitter);\n\n    const renderer = new Proton.CanvasRenderer(canvas);\n    this.proton.addRenderer(renderer);\n  }\n\n  createCustomBehaviour() {\n    const f = 10 * 100;\n    return {\n      initialize: function(particle) {\n        particle.f = new Proton.Vector2D(0, 0);\n      },\n      applyBehaviour: particle => {\n        let length = particle.v.length() / 1000;\n        let gradient = particle.v.getGradient();\n        gradient += 3.14 / 2;\n\n        particle.f.x = f * length * Math.cos(gradient);\n        particle.f.y = f * length * Math.sin(gradient);\n        particle.a.add(particle.f);\n      }\n    };\n  }\n\n  renderProton() {\n    this.proton && this.proton.update();\n  }\n\n  render() {\n    return (\n      <Canvas\n        globalCompositeOperation=\"xor\"\n        onCanvasInited={this.onCanvasInited.bind(this)}\n        onResize={this.onResize.bind(this)}\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Rand from \"./utils/Rand.js\";\nimport Ball from \"./particles/Ball.jsx\";\nimport Color from \"./particles/Color.jsx\";\nimport Lines from \"./particles/Lines.jsx\";\nimport Thick from \"./particles/Thick.jsx\";\nimport Square from \"./particles/Square.jsx\";\nimport Cobweb from \"./particles/Cobweb.jsx\";\nimport Circle from \"./particles/Circle.jsx\";\nimport Tadpole from \"./particles/Tadpole.jsx\";\nimport Polygon from \"./particles/Polygon.jsx\";\nimport Fountain from \"./particles/Fountain.jsx\";\n\nexport default class ParticlesBg extends Component {\n  static propTypes = {\n    type: PropTypes.type\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  getRandom(num) {\n    if (!this.rand) {\n      this.rand = new Rand();\n      this.rand.set(0.25, <Color num={num} />);\n      this.rand.set(0.2, <Ball num={num} />);\n      this.rand.set(0.2, <Lines num={num} />);\n      this.rand.set(0.16, <Thick num={num} />);\n      this.rand.set(0.18, <Circle num={num} />);\n      this.rand.set(0.04, <Cobweb num={num} />);\n      this.rand.set(0.1, <Polygon num={num} />);\n      this.rand.set(0.08, <Square num={num} />);\n      this.rand.set(0.18, <Tadpole num={num} />);\n      this.rand.set(0.15, <Fountain num={num} />);\n    }\n\n    return this.rand.getResult();\n  }\n\n  getBgParticles() {\n    const { type, num } = this.props;\n\n    let particles;\n    switch (type) {\n      case \"color\":\n        particles = <Color num={num} />;\n        break;\n      case \"ball\":\n        particles = <Ball num={num} />;\n        break;\n      case \"lines\":\n        particles = <Lines num={num} />;\n        break;\n      case \"thick\":\n        particles = <Thick num={num} />;\n        break;\n      case \"circle\":\n        particles = <Circle num={num} />;\n        break;\n      case \"cobweb\":\n        particles = <Cobweb num={num} />;\n        break;\n      case \"polygon\":\n        particles = <Polygon num={num} />;\n        break;\n      case \"square\":\n        particles = <Square num={num} />;\n        break;\n      case \"tadpole\":\n        particles = <Tadpole num={num} />;\n        break;\n      case \"fountain\":\n        particles = <Fountain num={num} />;\n        break;\n      case \"random\":\n        particles = this.getRandom(num);\n        break;\n\n      default:\n        particles = <Color num={num} />;\n        break;\n    }\n\n    return particles;\n  }\n\n  render() {\n    const particles = this.getBgParticles();\n    return <React.Fragment>{particles}</React.Fragment>;\n  }\n}\n"],"names":["Rand","list","probability","target","push","calculation","total","i","this","length","obj","val","a","b","Math","random","Canvas","props","size","width","height","canvasRef","React","createRef","initCanvas","resize","_this2","bind","addEventListener","canvas","current","onCanvasDidMount","globalCompositeOperation","getContext","setCanvasSize","heartbeatDetectionCanvasSize","onCanvasInited","_this3","clientHeight","onResize","removeEventListener","clientWidth","start","stop","handleWaypointEnter","handleWaypointLeave","ref","style","Component","Ball","createProton","createMiniEmitter","add","renderProton","remove","proton","destroy","e","context","Proton","emitter","Emitter","rate","Rate","num","Span","addInitialize","Mass","Radius","Life","Velocity","addBehaviour","Alpha","Color","Scale","Gravity","Collision","customDeadBehaviour","CrossZone","RectZone","p","x","min","max","y","emit","addEmitter","renderer","CanvasRenderer","onProtonUpdate","fillStyle","fillRect","addRenderer","particle","radius","miniEmitteing","dead","miniEmitter","radiusInitialize","V","colorBehaviour","reset","color","update","colors","Position","Infinity","easeOutCubic","Lines","crossZoneBehaviour","zone","renderers","damping","mouseObj","attractionBehaviour","Attraction","RandomDrift","createRenderer","onParticleUpdate","beginPath","strokeStyle","lineWidth","moveTo","old","lineTo","closePath","stroke","Thick","hue","index","colorTemplate","CircleZone","repulsion","Repulsion","attraction","onParticleCreated","data","begin","MathUtil","randomAToB","tha","PI","replace","cos","arc","fill","targetPosition","Square","backgroundColor","LineZone","getSpan","preEmit","CustomRenderer","clearRect","w","h","save","globalAlpha","alpha","translate","rotate","degreeTransform","rotation","rect","restore","Cobweb","pointZone","onProtonUpdateAfter","particles","j","pA","pB","dis","distanceTo","Circle","Tadpole","mouseInfo","points","fillPointsData","unshift","pop","drawTadpoleHead","drawTadpoleTail","l","linearEvaluation","A","COLOR","Flower","createEmitter","count","onParticleDead","drawPolygon","sin","mainEmitter","once","gravity","pool","get","completed","radiusInit","Rotate","expire","removeEmitter","oldRadius","emitterCount","Fountain","createCustomBehaviour","f","Vector2D","v","gradient","getGradient","ParticlesBg","rand","set","Polygon","getResult","type","getRandom","getBgParticles","Fragment","propTypes","PropTypes"],"mappings":"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"}